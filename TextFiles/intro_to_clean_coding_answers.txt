Exercises

1. Clean code is easy to read, does not contain repetitive code, has correct syntax and indentation and doesn’t use inline styling. This is important because you are most likely not going to be the only person who works on this code. Others should easily be able to read, change, and understand your code without a lot of digging. Clean code allows the app/site/program to be updated easily instead of rewritten saving a lot of time and energy. Having a clean code can also reduce errors or extraneous time to complete actions/loading. 

2. Many things are becoming “smart” in this day and age. If your smart refrigerator was relaying on code that was clunky or incorrect you could end up with a fridge full of bad good from overheating or undercooling. Washing machines could cycle forever, medical equipment could malfunction and fail to work causing a myriad of problems. As more things become ‘smart’ it’s important to make sure they are being done correctly and not causing menacing or even deadly results for users. 


3. No. There are too many comments and variables are not named correctly causing confusion and making the comments necessary. 

Function do( c, f)
	IF 
		SET temp to (c-32) * (5/9) degrees fahrenheit to celsius
	
		PRINT temp
	
	ELSE IF f
		SET temp to f * 1.8000 + 32.00 degrees celsius to fahrenheit
		
		PRINT temp

	END IF
End Function


4. Yes

5. 

A. No, could pull out functions for reuse - DRY. 

FUNCTION getTotal(discountRate, subTotal, tax, total)
	total = subTotal * discountRate + (subTotal * tax)
	PRINT “Your total due is: “ + total

FUNCTION getPayment(total, paymentType)
	IF paymentType = “Cash” THEN
		CALL getPayment RETURNING amount
		PRINT “Change due: “ + amount - total
	ELSE IF paymentType = “CREDIT CARD” THEN
		CALL getPayment RETURNING amount
		PRINT “Your credit card has been charge: “ + total
	
	END IF
END FUNCTION 

B. No, can combine IF statements.
FUNCTION checkoutBook(book, guest)
	IF guest.accountActive && !(guest.hasOverdueBooks) && guest.outstandingFees = 0 THEN
		APPEND book to guest.books
		SET book.status to “Checked Out”
		PRINT “Your books have been issued.”
	END IF
	
	ELSE
		PRINT “Unable to check out book.”
	END IF
END FUNCTION

C. No, could combine functions.

CLASS BankAccount
	FUNCTION displayBalance
		PRINT balance
	END FUNCTION

	FUNCTION accountChange(amount, deposit, withdraw)
		IF deposit THEN
			SET glance to balance + amount
		ELSE IF withdraw THEN
			SET balance to balance - amount
		END
	END FUNCTION

	FUNCTION bankOffers(hasCreditCard, hasCheckingAccount)
		IF NOT (customer.hasCreditCard THEN
			CALL offerCreditCard
		ELSE IF NOT (customer.hasBankAccount THEN
			CALL offerBankAccount
		END
	END FUNCTION
END


Programming Questions

6. 
var arrayOne = [10, 1, 4, 5, 1, 2, 2];
var arrayTwo = [1, 1];
var arrayThree = [1, 6, 8, 5, 7, 2, 1, 5, 12, 2];

function getSum(total, num) {
  return total + num;
}

var squareSum = arrayOne.reduce(getSum);

function getSquareRoot(squareSum) {
  if (Number.isInteger(Math.sqrt(squareSum))) {
    return Math.sqrt(squareSum);
  } else {
    return squareSum;
  }
}

getSquareRoot(squareSum);


7. 
function findDuplicate(array) {
  for(var i = 0; i < array.length; i++) {
    for( var n = i + 1; n < array.length; n++){ 
      if(array[i] === array[n]) {
        return true;
      } else {
        return false;
      }
    }
  }
}